
(fast-lock-cache-data 3 (quote (14625 . 19331)) (quote nil) (quote nil) (quote (t ("^#[ 	]*error[ 	]+\\(.+\\)" (1 font-lock-warning-face prepend)) ("^#[ 	]*\\(import\\|include\\)[ 	]*\\(<[^>\"
]*>?\\)" (2 font-lock-string-face)) ("^#[ 	]*define[ 	]+\\(\\sw+\\)(" (1 font-lock-function-name-face)) ("^#[ 	]*\\(elif\\|if\\)\\>" ("\\<\\(defined\\)\\>[ 	]*(?\\(\\sw+\\)?" nil nil (1 font-lock-builtin-face) (2 font-lock-variable-name-face nil t))) ("^#[ 	]*\\(\\sw+\\)\\>[ 	!]*\\(\\sw+\\)?" (1 font-lock-builtin-face) (2 font-lock-variable-name-face nil t)) ("^\\(\\sw+\\)\\>\\([ 	]*<\\([^>
]+\\)[ 	*&]*>\\)?\\([ 	]*::[ 	*~]*\\(\\sw+\\)\\)*[ 	]*(" (1 (if (or (match-beginning 2) (match-beginning 4)) font-lock-type-face font-lock-function-name-face)) (3 font-lock-type-face nil t) (5 font-lock-function-name-face nil t)) ("\\<\\(bool\\|c\\(har\\|omplex\\)\\|double\\|float\\|int\\|long\\|s\\(hort\\|igned\\)\\|unsigned\\|void\\|\\sw+_t\\|Point\\|Widget\\|[A-Z][a-z][A-Z]\\sw+\\)\\>" (0 font-lock-type-face)) ("\\<\\(operator\\)\\>[ 	]*\\(!=\\|%=\\|&[&=]\\|()\\|\\*=\\|\\+[+=]\\|-\\(>\\*\\|[=>-]\\)\\|/=\\|<\\(<=\\|[<=]\\)\\|==\\|>\\(>=\\|[=>]\\)\\|\\[\\]\\|\\^=\\||[=|]\\|[!%&*+,/<=>|~^-]\\)?" (1 font-lock-keyword-face) (2 font-lock-builtin-face nil t)) ("\\<\\(case\\|goto\\)\\>[ 	]*\\(-?\\sw+\\)?" (1 font-lock-keyword-face) (2 font-lock-constant-face nil t)) (":" ("^[ 	]*\\(\\sw+\\)[ 	]*:\\($\\|[^:]\\)" (beginning-of-line) (end-of-line) (1 font-lock-constant-face))) ("\\<\\(\\(a\\(sm\\|uto\\)\\|break\\|c\\(atch\\|on\\(st\\|tinue\\)\\)\\|d\\(elete\\|o\\)\\|e\\(lse\\|x\\(p\\(licit\\|ort\\)\\|tern\\)\\)\\|f\\(or\\|riend\\)\\|i\\(f\\|nline\\)\\|mutable\\|new\\|re\\(gister\\|turn\\)\\|s\\(izeof\\|tatic\\|witch\\)\\|t\\(emplate\\|h\\(is\\|row\\)\\|ry\\|ypedef\\)\\|v\\(irtual\\|olatile\\)\\|while\\)\\|\\(c\\(lass\\|onst_cast\\)\\|dynamic_cast\\|enum\\|namespace\\|p\\(r\\(ivate\\|otected\\)\\|ublic\\)\\|reinterpret_cast\\|st\\(atic_cast\\|ruct\\)\\|typename\\|u\\(nion\\|sing\\)\\)\\)\\>" (0 font-lock-keyword-face)) ("\\<\\(false\\|true\\)\\>" (0 font-lock-constant-face)) ("\\<\\(bool\\|c\\(har\\|omplex\\)\\|double\\|float\\|int\\|long\\|s\\(hort\\|igned\\)\\|unsigned\\|void\\|\\sw+_t\\|Point\\|Widget\\|[A-Z][a-z][A-Z]\\sw+\\)\\>\\([ 	]*<\\([^>
]+\\)[ 	*&]*>\\)?\\([ 	]*::[ 	*~]*\\(\\sw+\\)\\)*\\([ 	*&]+\\(\\sw+\\)\\>\\([ 	]*<\\([^>
]+\\)[ 	*&]*>\\)?\\([ 	]*::[ 	*~]*\\(\\sw+\\)\\)*\\)*" (5 font-lock-type-face nil t) (font-lock-match-c++-style-declaration-item-and-skip-to-next (goto-char (or (match-beginning 8) (match-end 1))) (goto-char (match-end 1)) (1 (cond ((or (match-beginning 2) (match-beginning 4)) font-lock-type-face) ((and (match-beginning 6) (c-at-toplevel-p)) font-lock-function-name-face) (t font-lock-variable-name-face))) (3 font-lock-type-face nil t) (5 (if (match-beginning 6) font-lock-function-name-face font-lock-variable-name-face) nil t))) ("\\<\\(c\\(lass\\|onst_cast\\)\\|dynamic_cast\\|enum\\|namespace\\|p\\(r\\(ivate\\|otected\\)\\|ublic\\)\\|reinterpret_cast\\|st\\(atic_cast\\|ruct\\)\\|typename\\|u\\(nion\\|sing\\)\\)\\>\\([ 	]*<\\([^>
]+\\)[ 	*&]*>\\)?\\([ 	]*::[ 	*~]*\\(\\sw+\\)\\)*[ 	]*\\(\\(\\sw+\\)\\>\\([ 	]*<\\([^>
]+\\)[ 	*&]*>\\)?\\([ 	]*::[ 	*~]*\\(\\sw+\\)\\)*\\)?" (8 font-lock-type-face nil t) (12 font-lock-type-face nil t) (font-lock-match-c++-style-declaration-item-and-skip-to-next nil nil (1 (cond ((or (match-beginning 2) (match-beginning 4)) font-lock-type-face) ((and (match-beginning 6) (c-at-toplevel-p)) font-lock-function-name-face) (t font-lock-variable-name-face))) (3 font-lock-type-face nil t) (5 (if (match-beginning 6) font-lock-function-name-face font-lock-variable-name-face) nil t))) ("\\(}\\)[ 	*]*\\sw" (font-lock-match-c++-style-declaration-item-and-skip-to-next (goto-char (match-end 1)) nil (1 font-lock-type-face))) ("^\\(\\(\\sw+\\)\\>\\([ 	]*<\\([^>
]+\\)[ 	*&]*>\\)?\\([ 	]*::[ 	*~]*\\(\\sw+\\)\\)*[ 	*&]*\\)+" (font-lock-match-c++-style-declaration-item-and-skip-to-next (goto-char (match-beginning 1)) (goto-char (match-end 1)) (1 (cond ((or (match-beginning 2) (match-beginning 4)) font-lock-type-face) ((match-beginning 6) font-lock-function-name-face) (t font-lock-variable-name-face))) (3 font-lock-type-face nil t) (5 (if (match-beginning 6) font-lock-function-name-face font-lock-variable-name-face) nil t))))) (quote ((font-lock-type-face 40513 40517 40497 40501 40384 40388 40286 40289 40253 40257 40177 40180 39792 39795 38524 38527 38409 38412 38093 38096 38015 38019 37987 37991 37959 37963 37931 37935 37705 37708 37629 37633 37511 37514 36945 36948 34861 34864 34712 34715 34264 34267 33982 33994 33965 33968 33929 33941 33552 33555) (font-lock-function-name-face 40502 40511 40436 40452 40372 40379 40321 40327 40274 40283 40212 40220 40165 40173 40074 40082 39962 39971 39895 39904 39842 39850 39780 39787 39730 39738 39680 39687 39615 39622 39550 39558 39485 39492 39420 39427 39355 39362 39290 39297 39225 39231 39160 39167 39095 39102 39029 39036 38963 38970 38897 38907 38831 38839 38766 38773 38715 38724 38650 38657 38585 38592 38479 38487 38364 38371 38293 38306 38230 38242 38180 38189 38128 38137 38065 38075 38031 38039 38003 38010 37975 37982 37947 37956 37919 37928 37828 37837 37740 37748 37650 37661 37546 37556 37466 37476 37340 37350 37208 37219 37099 37110 37004 37014 36900 36909 36807 36817 36714 36723 36609 36618 36504 36514 36399 36408 36294 36303 36201 36210 36093 36102 35985 35993 35877 35886 35770 35779 35661 35670 35552 35561 35443 35455 35334 35344 35226 35235 35131 35142 35023 35032 34915 34924 34774 34784 34610 34619 34487 34501 34394 34405 34299 34310 34193 34205 34126 34136 34071 34080 33474 33485) (font-lock-keyword-face 33922 33928 33914 33921 33458 33464) (string 33170 33180 33151 33159 33132 33140 33110 33121 33091 33099 33070 33080 33053 33059 33032 33042 33011 33021 32990 33000) (font-lock-variable-name-face 40397 40421 40297 40304 40290 40295 40258 40262 40188 40195 40181 40186 39817 39824 39803 39810 39796 39801 38535 38542 38528 38533 38420 38427 38413 38418 38104 38111 38097 38102 37716 37723 37709 37714 37634 37638 37522 37529 37515 37520 36949 36954 34886 34897 34872 34879 34865 34870 34725 34732 34716 34723 34275 34282 34268 34273 33975 33978 33801 33825 33563 33570 33556 33561 32968 32978 32948 32958) (font-lock-builtin-face 40524 40529 40457 40462 40394 40396 33997 34002 33798 33800 33162 33169 33143 33150 33124 33131 33102 33109 33083 33090 33062 33069 33045 33052 33024 33031 33003 33010 32982 32989 32961 32967 32941 32947) (font-lock-comment-face 40530 40546 40464 40496 37883 37908 37859 37882 34028 34060 34004 34027 33826 33912 33579 33795 33389 33457 33320 33388 33251 33319 33182 33250 823 32936 347 820 1 344))))
