<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="DebugJTEST|Win32">
      <Configuration>DebugJTEST</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{7375BFCA-376F-4CB1-BBE6-7C88374BDBD9}</ProjectGuid>
    <RootNamespace>libfirm</RootNamespace>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC60.props" />
    <Import Project="firm_config.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC60.props" />
    <Import Project="firm_config.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC60.props" />
    <Import Project="firm_config.props" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.30319.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(Configuration)\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(Configuration)\</IntDir>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">bui..\..\win32\$(Configuration)\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">bui..\..\win32\$(Configuration)\</IntDir>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">$(Configuration)\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">$(Configuration)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <AdditionalOptions>/WL %(AdditionalOptions)</AdditionalOptions>
      <Optimization>MaxSpeed</Optimization>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <AdditionalIncludeDirectories>$(FirmRoot)/ir;$(FirmRoot)/ir/obstack;$(FirmRoot)/win32;$(FirmRoot)/ir/adt;$(FirmRoot)/ir/ana;$(FirmRoot)/ir/common;$(FirmRoot)/ir/debug;$(FirmRoot)/ir/ident;$(FirmRoot)/ir/ir;$(FirmRoot)/ir/opt;$(FirmRoot)/ir/stat;$(FirmRoot)/ir/tr;$(FirmRoot)/ir/tv;$(FirmRoot)/ir/arch;$(FirmRoot)/ir/lower;$(FirmRoot)/ir/be;$(FirmRoot)/ir/libcore;$(FirmRoot)/include/libfirm;$(FirmRoot)/include/libfirm/adt;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>NDEBUG;WIN32;_LIB;HAVE_CONFIG_H;_CRT_SECURE_NO_DEPRECATE;inline=_inline;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <PrecompiledHeaderOutputFile>.\Release/libfirm.pch</PrecompiledHeaderOutputFile>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <ProgramDataBaseFileName>$(IntDir)</ProgramDataBaseFileName>
      <WarningLevel>Level3</WarningLevel>
      <SuppressStartupBanner>true</SuppressStartupBanner>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <CompileAs>Default</CompileAs>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <Culture>0x0407</Culture>
    </ResourceCompile>
    <Lib>
      <OutputFile>..\..\ipd\lib\libfirm.lib</OutputFile>
      <SuppressStartupBanner>true</SuppressStartupBanner>
    </Lib>
    <Bscmake>
      <SuppressStartupBanner>true</SuppressStartupBanner>
      <OutputFile>.\Release/libfirm.bsc</OutputFile>
		</Bscmake>
    <Link>
      <AdditionalDependencies>winmm.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <AdditionalOptions>/WL %(AdditionalOptions)</AdditionalOptions>
      <Optimization>Disabled</Optimization>
      <AdditionalIncludeDirectories>$(FirmRoot)/ir;$(FirmRoot)/ir/obstack;$(FirmRoot)/win32;$(FirmRoot)/ir/adt;$(FirmRoot)/ir/ana;$(FirmRoot)/ir/common;$(FirmRoot)/ir/debug;$(FirmRoot)/ir/ident;$(FirmRoot)/ir/ir;$(FirmRoot)/ir/opt;$(FirmRoot)/ir/stat;$(FirmRoot)/ir/tr;$(FirmRoot)/ir/tv;$(FirmRoot)/ir/arch;$(FirmRoot)/ir/lower;$(FirmRoot)/ir/be;$(FirmRoot)/ir/libcore;$(FirmRoot)/include/libfirm;$(FirmRoot)/include/libfirm/adt;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>NO_DEBUG;WIN32;_LIB;HAVE_CONFIG_H;_CRT_SECURE_NO_DEPRECATE;inline=_inline;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MinimalRebuild>true</MinimalRebuild>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <PrecompiledHeaderOutputFile>.\Debug/libfirm.pch</PrecompiledHeaderOutputFile>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <ProgramDataBaseFileName>$(IntDir)</ProgramDataBaseFileName>
      <WarningLevel>Level3</WarningLevel>
      <SuppressStartupBanner>true</SuppressStartupBanner>
      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
      <CompileAs>Default</CompileAs>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <Culture>0x0407</Culture>
    </ResourceCompile>
    <Lib>
      <OutputFile>..\..\ipd\lib\libfirm_g.lib</OutputFile>
      <SuppressStartupBanner>true</SuppressStartupBanner>
    </Lib>
    <Bscmake>
      <SuppressStartupBanner>true</SuppressStartupBanner>
      <OutputFile>.\Debug/libfirm.bsc</OutputFile>
    </Bscmake>
    <Link>
      <AdditionalDependencies>winmm.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">
    <ClCompile>
      <AdditionalOptions>/WL %(AdditionalOptions)</AdditionalOptions>
      <Optimization>Disabled</Optimization>
      <AdditionalIncludeDirectories>$(FirmRoot);$(FirmRoot)/ir/obstack;$(FirmRoot)/win32;$(FirmRoot)/ir/adt;$(FirmRoot)/ir/ana;$(FirmRoot)/ir/common;$(FirmRoot)/ir/debug;$(FirmRoot)/ir/ident;$(FirmRoot)/ir/ir;$(FirmRoot)/ir/opt;$(FirmRoot)/ir/stat;$(FirmRoot)/ir/tr;$(FirmRoot)/ir/tv;$(FirmRoot)/ir/arch;$(FirmRoot)/ir/lower;$(FirmRoot)/ir/be;$(FirmRoot)/ir/libcore;$(FirmRoot)/include/libfirm;$(FirmRoot)/include/libfirm/adt;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>_DEBUG;WIN32;_LIB;HAVE_CONFIG_H;_CRT_SECURE_NO_DEPRECATE;inline=_inline;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MinimalRebuild>true</MinimalRebuild>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <PrecompiledHeaderOutputFile>.\Debug/libfirm.pch</PrecompiledHeaderOutputFile>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <ProgramDataBaseFileName>$(IntDir)</ProgramDataBaseFileName>
      <WarningLevel>Level3</WarningLevel>
      <SuppressStartupBanner>true</SuppressStartupBanner>
      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
      <CompileAs>Default</CompileAs>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <Culture>0x0407</Culture>
    </ResourceCompile>
    <Lib>
      <OutputFile>..\..\ipd\lib\libfirm_g.lib</OutputFile>
      <SuppressStartupBanner>true</SuppressStartupBanner>
    </Lib>
    <Bscmake>
      <SuppressStartupBanner>true</SuppressStartupBanner>
      <OutputFile>.\Debug/libfirm.bsc</OutputFile>
		</Bscmake>
    <Link>
      <AdditionalDependencies>winmm.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
	<ItemGroup>
    <ClCompile Include="$(FirmRoot)\ir\adt\array.c" />
    <ClCompile Include="$(FirmRoot)\ir\adt\bipartite.c" />
    <ClCompile Include="$(FirmRoot)\ir\adt\cpset.c" />
    <ClCompile Include="$(FirmRoot)\ir\adt\eset.c" />
    <ClCompile Include="$(FirmRoot)\ir\adt\gaussjordan.c" />
    <ClCompile Include="$(FirmRoot)\ir\adt\gaussseidel.c" />
    <ClCompile Include="$(FirmRoot)\ir\adt\hashset.c" />
    <ClCompile Include="$(FirmRoot)\ir\adt\hungarian.c" />
    <ClCompile Include="$(FirmRoot)\ir\adt\iterator.c" />
    <ClCompile Include="$(FirmRoot)\ir\adt\pdeq.c" />
    <ClCompile Include="$(FirmRoot)\ir\adt\plist.c" />
    <ClCompile Include="$(FirmRoot)\ir\adt\pmap.c" />
    <ClCompile Include="$(FirmRoot)\ir\adt\pqueue.c" />
    <ClCompile Include="$(FirmRoot)\ir\adt\pset.c" />
    <ClCompile Include="$(FirmRoot)\ir\adt\pset_new.c" />
    <ClCompile Include="$(FirmRoot)\ir\adt\set.c" />
    <ClCompile Include="$(FirmRoot)\ir\adt\xmalloc.c" />
    <ClInclude Include="$(FirmRoot)\ir\adt\array_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\adt\bitfiddle.h" />
    <ClInclude Include="$(FirmRoot)\ir\adt\bitset.h" />
    <ClInclude Include="$(FirmRoot)\ir\adt\compiler.h" />
    <ClInclude Include="$(FirmRoot)\ir\adt\raw_bitset.h" />
    <ClCompile Include="$(FirmRoot)\ir\ana\absgraph.c" />
    <ClCompile Include="$(FirmRoot)\ir\ana\analyze_irg_args.c" />
    <ClCompile Include="$(FirmRoot)\ir\ana\callgraph.c" />
    <ClCompile Include="$(FirmRoot)\ir\ana\cdep.c" />
    <ClCompile Include="$(FirmRoot)\ir\ana\cgana.c" />
    <ClCompile Include="$(FirmRoot)\ir\ana\dfs.c" />
    <ClCompile Include="$(FirmRoot)\ir\ana\execfreq.c" />
    <ClCompile Include="$(FirmRoot)\ir\ana\execution_frequency.c" />
    <ClCompile Include="$(FirmRoot)\ir\ana\field_temperature.c" />
    <ClCompile Include="$(FirmRoot)\ir\ana\height.c" />
    <ClCompile Include="$(FirmRoot)\ir\ana\interval_analysis.c" />
    <ClCompile Include="$(FirmRoot)\ir\ana\irbackedge.c" />
    <ClCompile Include="$(FirmRoot)\ir\ana\ircfscc.c" />
    <ClCompile Include="$(FirmRoot)\ir\ana\irconsconfirm.c" />
    <ClCompile Include="$(FirmRoot)\ir\ana\irdom.c" />
    <ClCompile Include="$(FirmRoot)\ir\ana\irextbb2.c" />
    <ClCompile Include="$(FirmRoot)\ir\ana\irextbb.c" />
    <ClCompile Include="$(FirmRoot)\ir\ana\irlivechk.c" />
    <ClCompile Include="$(FirmRoot)\ir\ana\irloop.c" />
    <ClCompile Include="$(FirmRoot)\ir\ana\irmemory.c" />
    <ClCompile Include="$(FirmRoot)\ir\ana\irouts.c" />
    <ClCompile Include="$(FirmRoot)\ir\ana\irscc.c" />
    <ClCompile Include="$(FirmRoot)\ir\ana\irsimpletype.c" />
    <ClCompile Include="$(FirmRoot)\ir\ana\irtypeinfo.c" />
    <ClCompile Include="$(FirmRoot)\ir\ana\rta.c" />
    <ClCompile Include="$(FirmRoot)\ir\ana\structure.c" />
    <ClCompile Include="$(FirmRoot)\ir\ana\trouts.c" />
    <ClCompile Include="$(FirmRoot)\ir\ana\vrp.c" />
    <ClInclude Include="$(FirmRoot)\ir\ana\absgraph.h" />
    <ClInclude Include="$(FirmRoot)\ir\ana\dfs.h" />
    <ClInclude Include="$(FirmRoot)\ir\ana\dfs_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\ana\irbackedge_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\ana\irdom_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\ana\irextbb_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\ana\irlivechk.h" />
    <ClInclude Include="$(FirmRoot)\ir\ana\irloop_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\ana\irmemory_t.h" />
    <ClCompile Include="$(FirmRoot)\ir\be\beabi.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\bearch.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\beblocksched.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\bechordal.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\bechordal_common.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\bechordal_draw.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\bechordal_main.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\becopyheur2.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\becopyheur4.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\becopyheur.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\becopyilp1.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\becopyilp2.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\becopyilp.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\becopyopt.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\becopypbqp.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\becopystat.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\bedbgout.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\bedomfront.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\bedump_minir.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\beemitter_binary.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\beemitter.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\beflags.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\begnuas.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\beifg.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\beifg_clique.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\beifg_list.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\beifg_pointer.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\beifg_std.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\beilpsched.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\beinfo.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\beinsn.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\beirg.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\beirgmod.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\belistsched.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\belive.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\beloopana.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\belower.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\bemachine.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\bemain.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\bemodule.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\benode.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\bepbqpcoloring.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\bepeephole.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\beprefalloc.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\bepressurestat.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\bera.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\besched.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\beschedmris.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\beschednormal.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\beschedrand.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\beschedregpress.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\beschedrss.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\beschedtrace.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\beschedtrivial.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\bespillbelady2.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\bespillbelady3.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\bespillbelady.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\bespill.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\bespilldaemel.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\bespillslots.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\bespillutil.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\bessaconstr.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\bessadestr.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\bestabs.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\bestat.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\bestate.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\betranshlp.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\beuses.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\beutil.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\beverify.c" />
    <ClInclude Include="$(FirmRoot)\ir\be\beabi.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\bearch.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\beblocksched.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\bechordal_common.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\bechordal_draw.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\bechordal.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\bechordal_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\becopyilp_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\becopyopt.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\becopyopt_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\becopypbqp.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\becopystat.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\be_dbgout.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\be_dbgout_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\bedomfront.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\bedump_minir.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\beemitter_binary.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\beemitter.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\beflags.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\begnuas.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\beifg.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\beifg_impl.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\beifg_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\beilpsched.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\beinfo.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\beinsn_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\beintlive_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\beirg.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\beirgmod.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\belistsched.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\belive.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\belive_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\beloopana.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\belower.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\bemachine.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\bemodule.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\bemodule_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\benode.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\bepbqpcoloring.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\bepeephole.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\bepressurestat.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\bera.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\besched.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\beschedmris.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\beschedrss.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\bespill.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\bespillslots.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\bespillutil.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\bessaconstr.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\bessadestr.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\bestate.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\bestatevent.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\bestat.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\be_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\betranshlp.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\be_types.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\beuses.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\beutil.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\beverify.h" />
    <ClCompile Include="$(FirmRoot)\ir\common\debug.c" />
    <ClCompile Include="$(FirmRoot)\ir\common\error.c" />
    <ClCompile Include="$(FirmRoot)\ir\common\firm.c" />
    <ClCompile Include="$(FirmRoot)\ir\common\firm_common.c" />
    <ClCompile Include="$(FirmRoot)\ir\common\irtools.c" />
    <ClCompile Include="$(FirmRoot)\ir\common\timing.c" />
    <ClInclude Include="$(FirmRoot)\ir\common\debug.h" />
    <ClInclude Include="$(FirmRoot)\ir\common\error.h" />
    <ClInclude Include="$(FirmRoot)\ir\common\irtools.h" />
    <ClCompile Include="$(FirmRoot)\ir\debug\dbginfo.c" />
    <ClCompile Include="$(FirmRoot)\ir\debug\debugger.c" />
    <ClCompile Include="$(FirmRoot)\ir\debug\seqnumbers.c" />
    <ClInclude Include="$(FirmRoot)\ir\debug\dbginfo_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\debug\debugger.h" />
    <ClCompile Include="$(FirmRoot)\ir\ident\ident.c" />
    <ClCompile Include="$(FirmRoot)\ir\ident\mangle.c" />
    <ClInclude Include="$(FirmRoot)\ir\ident\ident_t.h" />
    <ClCompile Include="$(FirmRoot)\ir\ir\instrument.c" />
    <ClCompile Include="$(FirmRoot)\ir\ir\irarch.c" />
    <ClCompile Include="$(FirmRoot)\ir\ir\irargs.c" />
    <ClCompile Include="$(FirmRoot)\ir\ir\ircgcons.c" />
    <ClCompile Include="$(FirmRoot)\ir\ir\ircons.c" />
    <ClCompile Include="$(FirmRoot)\ir\ir\irdump.c" />
    <ClCompile Include="$(FirmRoot)\ir\ir\irdumptxt.c" />
    <ClCompile Include="$(FirmRoot)\ir\ir\iredges.c" />
    <ClCompile Include="$(FirmRoot)\ir\ir\irflag.c" />
    <ClCompile Include="$(FirmRoot)\ir\ir\irgmod.c" />
    <ClCompile Include="$(FirmRoot)\ir\ir\irgopt.c" />
    <ClCompile Include="$(FirmRoot)\ir\ir\irgraph.c" />
    <ClCompile Include="$(FirmRoot)\ir\ir\irgwalk_blk.c" />
    <ClCompile Include="$(FirmRoot)\ir\ir\irgwalk.c" />
    <ClCompile Include="$(FirmRoot)\ir\ir\irhooks.c" />
    <ClCompile Include="$(FirmRoot)\ir\ir\irio.c" />
    <ClCompile Include="$(FirmRoot)\ir\ir\irlinkednodemap.c" />
    <ClCompile Include="$(FirmRoot)\ir\ir\irlinkednodeset.c" />
    <ClCompile Include="$(FirmRoot)\ir\ir\irmode.c" />
    <ClCompile Include="$(FirmRoot)\ir\ir\irnode.c" />
    <ClCompile Include="$(FirmRoot)\ir\ir\irnodemap.c" />
    <ClCompile Include="$(FirmRoot)\ir\ir\irnodeset.c" />
    <ClCompile Include="$(FirmRoot)\ir\ir\irop.c" />
    <ClCompile Include="$(FirmRoot)\ir\ir\iropt.c" />
    <ClCompile Include="$(FirmRoot)\ir\ir\irpass.c" />
    <ClCompile Include="$(FirmRoot)\ir\ir\irphase.c" />
    <ClCompile Include="$(FirmRoot)\ir\ir\irprintf.c" />
    <ClCompile Include="$(FirmRoot)\ir\ir\irprofile.c" />
    <ClCompile Include="$(FirmRoot)\ir\ir\irprog.c" />
    <ClCompile Include="$(FirmRoot)\ir\ir\irssacons.c" />
    <ClCompile Include="$(FirmRoot)\ir\ir\irvrfy.c" />
    <ClCompile Include="$(FirmRoot)\ir\ir\pseudo_irg.c" />
    <ClCompile Include="$(FirmRoot)\ir\ir\valueset.c" />
    <ClInclude Include="$(FirmRoot)\ir\ir\gen_irnode.h" />
    <ClInclude Include="$(FirmRoot)\ir\ir\instrument.h" />
    <ClInclude Include="$(FirmRoot)\ir\ir\irargs_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\ir\irbitset.h" />
    <ClInclude Include="$(FirmRoot)\ir\ir\ircons_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\ir\irdump_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\ir\iredgeset.h" />
    <ClInclude Include="$(FirmRoot)\ir\ir\iredges_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\ir\irflag_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\ir\irgraph_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\ir\irlinkednodemap.h" />
    <ClInclude Include="$(FirmRoot)\ir\ir\irlinkednodeset.h" />
    <ClInclude Include="$(FirmRoot)\ir\ir\irmode_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\ir\irnodemap.h" />
    <ClInclude Include="$(FirmRoot)\ir\ir\irnodeset.h" />
    <ClInclude Include="$(FirmRoot)\ir\ir\irnode_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\ir\irop_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\ir\iropt_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\ir\irpass_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\ir\irphase.h" />
    <ClInclude Include="$(FirmRoot)\ir\ir\irphase_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\ir\irprintf_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\ir\irprofile.h" />
    <ClInclude Include="$(FirmRoot)\ir\ir\irprog_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\ir\irtypes.h" />
    <ClInclude Include="$(FirmRoot)\ir\ir\irvrfy_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\ir\valueset.h" />
    <ClCompile Include="$(FirmRoot)\ir\libcore\lc_appendable.c" />
    <ClCompile Include="$(FirmRoot)\ir\libcore\lc_config_lexer.c" />
    <ClCompile Include="$(FirmRoot)\ir\libcore\lc_config_parser.c" />
    <ClCompile Include="$(FirmRoot)\ir\libcore\lc_opts.c" />
    <ClCompile Include="$(FirmRoot)\ir\libcore\lc_opts_enum.c" />
    <ClCompile Include="$(FirmRoot)\ir\libcore\lc_printf.c" />
    <ClInclude Include="$(FirmRoot)\ir\libcore\lc_appendable.h" />
    <ClInclude Include="$(FirmRoot)\ir\libcore\lc_common_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\libcore\lc_config.h" />
    <ClInclude Include="$(FirmRoot)\ir\libcore\lc_config_parser.h" />
    <ClInclude Include="$(FirmRoot)\ir\libcore\lc_defines.h" />
    <ClInclude Include="$(FirmRoot)\ir\libcore\lc_opts_enum.h" />
    <ClInclude Include="$(FirmRoot)\ir\libcore\lc_opts.h" />
    <ClInclude Include="$(FirmRoot)\ir\libcore\lc_opts_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\libcore\lc_parser_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\libcore\lc_printf.h" />
    <ClCompile Include="$(FirmRoot)\ir\lower\lower_calls.c" />
    <ClCompile Include="$(FirmRoot)\ir\lower\lower_copyb.c" />
    <ClCompile Include="$(FirmRoot)\ir\lower\lower_dw.c" />
    <ClCompile Include="$(FirmRoot)\ir\lower\lower_hl.c" />
    <ClCompile Include="$(FirmRoot)\ir\lower\lower_intrinsics.c" />
    <ClCompile Include="$(FirmRoot)\ir\lower\lower_mode_b.c" />
    <ClCompile Include="$(FirmRoot)\ir\lower\lower_mux.c" />
    <ClCompile Include="$(FirmRoot)\ir\lower\lower_switch.c" />
    <ClInclude Include="$(FirmRoot)\ir\lower\*.h" />
    <ClCompile Include="$(FirmRoot)\ir\obstack\obstack.c" />
    <ClCompile Include="$(FirmRoot)\ir\obstack\obstack_printf.c" />
    <ClInclude Include="$(FirmRoot)\ir\obstack\*.h" />
    <ClCompile Include="$(FirmRoot)\ir\opt\boolopt.c" />
    <ClCompile Include="$(FirmRoot)\ir\opt\cfopt.c" />
    <ClCompile Include="$(FirmRoot)\ir\opt\code_placement.c" />
    <ClCompile Include="$(FirmRoot)\ir\opt\combo.c" />
    <ClCompile Include="$(FirmRoot)\ir\opt\convopt.c" />
    <ClCompile Include="$(FirmRoot)\ir\opt\critical_edges.c" />
    <ClCompile Include="$(FirmRoot)\ir\opt\dead_code_elimination.c" />
    <ClCompile Include="$(FirmRoot)\ir\opt\escape_ana.c" />
    <ClCompile Include="$(FirmRoot)\ir\opt\fp-vrp.c" />
    <ClCompile Include="$(FirmRoot)\ir\opt\funccall.c" />
    <ClCompile Include="$(FirmRoot)\ir\opt\garbage_collect.c" />
    <ClCompile Include="$(FirmRoot)\ir\opt\gvn_pre.c" />
    <ClCompile Include="$(FirmRoot)\ir\opt\ifconv.c" />
    <ClCompile Include="$(FirmRoot)\ir\opt\ircgopt.c" />
    <ClCompile Include="$(FirmRoot)\ir\opt\jumpthreading.c" />
    <ClCompile Include="$(FirmRoot)\ir\opt\ldstopt.c" />
    <ClCompile Include="$(FirmRoot)\ir\opt\loop.c" />
    <ClCompile Include="$(FirmRoot)\ir\opt\opt_blocks.c" />
    <ClCompile Include="$(FirmRoot)\ir\opt\opt_confirms.c" />
    <ClCompile Include="$(FirmRoot)\ir\opt\opt_frame.c" />
    <ClCompile Include="$(FirmRoot)\ir\opt\opt_inline.c" />
    <ClCompile Include="$(FirmRoot)\ir\opt\opt_ldst.c" />
    <ClCompile Include="$(FirmRoot)\ir\opt\opt_osr.c" />
    <ClCompile Include="$(FirmRoot)\ir\opt\opt_polymorphy.c" />
    <ClCompile Include="$(FirmRoot)\ir\opt\parallelize_mem.c" />
    <ClCompile Include="$(FirmRoot)\ir\opt\proc_cloning.c" />
    <ClCompile Include="$(FirmRoot)\ir\opt\reassoc.c" />
    <ClCompile Include="$(FirmRoot)\ir\opt\return.c" />
    <ClCompile Include="$(FirmRoot)\ir\opt\scalar_replace.c" />
    <ClCompile Include="$(FirmRoot)\ir\opt\tailrec.c" />
    <ClCompile Include="$(FirmRoot)\ir\opt\tropt.c" />
    <ClInclude Include="$(FirmRoot)\ir\opt\iropt_dbg.h" />
    <ClInclude Include="$(FirmRoot)\ir\opt\opt_confirms.h" />
    <ClInclude Include="$(FirmRoot)\ir\opt\opt_init.h" />
    <ClInclude Include="$(FirmRoot)\ir\opt\opt_polymorphy.h" />
    <ClInclude Include="$(FirmRoot)\ir\opt\reassoc_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\opt\scalar_replace.h" />
    <ClCompile Include="$(FirmRoot)\ir\stat\const_stat.c" />
    <ClCompile Include="$(FirmRoot)\ir\stat\dags.c" />
    <ClCompile Include="$(FirmRoot)\ir\stat\distrib.c" />
    <ClCompile Include="$(FirmRoot)\ir\stat\firmstat.c" />
    <ClCompile Include="$(FirmRoot)\ir\stat\pattern.c" />
    <ClCompile Include="$(FirmRoot)\ir\stat\pattern_dmp.c" />
    <ClCompile Include="$(FirmRoot)\ir\stat\stat_dmp.c" />
    <ClCompile Include="$(FirmRoot)\ir\stat\statev.c" />
    <ClCompile Include="$(FirmRoot)\ir\stat\stat_liveness.c" />
    <ClCompile Include="$(FirmRoot)\ir\stat\stat_timing.c" />
    <ClInclude Include="$(FirmRoot)\ir\stat\counter.h" />
    <ClInclude Include="$(FirmRoot)\ir\stat\dags.h" />
    <ClInclude Include="$(FirmRoot)\ir\stat\firmstat_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\stat\pattern_dmp.h" />
    <ClInclude Include="$(FirmRoot)\ir\stat\pattern.h" />
    <ClInclude Include="$(FirmRoot)\ir\stat\stat_dmp.h" />
    <ClInclude Include="$(FirmRoot)\ir\stat\statev.h" />
    <ClInclude Include="$(FirmRoot)\ir\stat\stat_timing.h" />
    <ClCompile Include="$(FirmRoot)\ir\tr\compound_path.c" />
    <ClCompile Include="$(FirmRoot)\ir\tr\entity.c" />
    <ClCompile Include="$(FirmRoot)\ir\tr\tpop.c" />
    <ClCompile Include="$(FirmRoot)\ir\tr\tr_inheritance.c" />
    <ClCompile Include="$(FirmRoot)\ir\tr\trvrfy.c" />
    <ClCompile Include="$(FirmRoot)\ir\tr\type.c" />
    <ClCompile Include="$(FirmRoot)\ir\tr\type_finalization.c" />
    <ClCompile Include="$(FirmRoot)\ir\tr\typewalk.c" />
    <ClInclude Include="$(FirmRoot)\ir\tr\compound_path_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\tr\entity_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\tr\tpop_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\tr\type_t.h" />
    <ClCompile Include="$(FirmRoot)\ir\tv\fltcalc.c" />
    <ClCompile Include="$(FirmRoot)\ir\tv\strcalc.c" />
    <ClCompile Include="$(FirmRoot)\ir\tv\tv.c" />
    <ClInclude Include="$(FirmRoot)\ir\tv\fltcalc.h" />
    <ClInclude Include="$(FirmRoot)\ir\tv\strcalc.h" />
    <ClInclude Include="$(FirmRoot)\ir\tv\tv_t.h" />
    <ClCompile Include="$(FirmRoot)\win32\math.c" />
    <ClInclude Include="$(FirmRoot)\win32\config.h" />
    <ClInclude Include="$(FirmRoot)\win32\ieee754.h" />
    <ClInclude Include="$(FirmRoot)\win32\inttypes.h" />
    <ClInclude Include="$(FirmRoot)\win32\stdbool.h" />
    <ClInclude Include="$(FirmRoot)\win32\stdint.h" />
    <ClCompile Include="$(FirmRoot)\include\libfirm\*.c" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\analyze_irg_args.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\be.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\callgraph.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\cdep.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\cgana.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\compound_path.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\dbginfo.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\execfreq.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\execution_frequency.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\field_temperature.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\firm_common.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\firm.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\firmstat.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\firm_types.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\height.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\ident.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\interval_analysis.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\irarch.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\ircgcons.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\ircgopt.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\irconsconfirm.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\ircons.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\irdom.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\irdump.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\iredgekinds.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\iredges.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\irextbb.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\irflag.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\irgmod.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\irgopt.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\irgraph.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\irgwalk.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\irhooks.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\irio.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\irloop.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\irmemory.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\irmode.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\irnode.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\irop.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\iropt.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\iroptimize.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\irouts.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\irpass.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\irprintf.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\irprog.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\irsimpletype.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\irtypeinfo.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\irvrfy.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\lowering.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\old_fctnames.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\pseudo_irg.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\rta.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\seqnumbers.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\structure.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\timing.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\trouts.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\tv.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\typerep.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\vrp.h" />
    <ClCompile Include="$(FirmRoot)\include\libfirm\adt\*.c" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\adt\align.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\adt\array.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\adt\bipartite.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\adt\cpset.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\adt\eset.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\adt\fourcc.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\adt\gaussjordan.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\adt\gaussseidel.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\adt\hashptr.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\adt\hashset.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\adt\hungarian.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\adt\impl.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\adt\iterator.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\adt\list.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\adt\obstack.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\adt\obst.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\adt\offset.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\adt\pdeq.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\adt\plist.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\adt\pmap.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\adt\pqueue.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\adt\pset.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\adt\pset_new.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\adt\set.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\adt\unionfind.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\adt\util.h" />
    <ClInclude Include="$(FirmRoot)\include\libfirm\adt\xmalloc.h" />
    <ClCompile Include="$(FirmRoot)\ir\be\ia32\bearch_ia32.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\ia32\gen_ia32_emitter.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\ia32\gen_ia32_machine.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\ia32\gen_ia32_regalloc_if.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\ia32\ia32_address_mode.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\ia32\ia32_architecture.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\ia32\ia32_common_transform.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\ia32\ia32_emitter.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\ia32\ia32_finish.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\ia32\ia32_fpu.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\ia32\ia32_intrinsics.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\ia32\ia32_map_regs.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\ia32\ia32_new_nodes.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\ia32\ia32_optimize.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\ia32\ia32_transform.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\ia32\ia32_util.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\ia32\ia32_x87.c" />
    <ClInclude Include="$(FirmRoot)\ir\be\ia32\bearch_ia32_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\ia32\gen_ia32_emitter.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\ia32\gen_ia32_machine.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\ia32\gen_ia32_new_nodes.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\ia32\gen_ia32_regalloc_if.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\ia32\ia32_address_mode.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\ia32\ia32_architecture.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\ia32\ia32_common_transform.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\ia32\ia32_dbg_stat.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\ia32\ia32_emitter.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\ia32\ia32_finish.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\ia32\ia32_fpu.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\ia32\ia32_map_regs.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\ia32\ia32_new_nodes.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\ia32\ia32_nodes_attr.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\ia32\ia32_optimize.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\ia32\ia32_transform.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\ia32\ia32_util.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\ia32\ia32_x87.h" />
    <ClCompile Include="$(FirmRoot)\ir\be\arm\arm_emitter.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\arm\arm_map_regs.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\arm\arm_new_nodes.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\arm\arm_optimize.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\arm\arm_transform.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\arm\bearch_arm.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\arm\gen_arm_emitter.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\arm\gen_arm_machine.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\arm\gen_arm_regalloc_if.c" />
    <ClInclude Include="$(FirmRoot)\ir\be\arm\arm_emitter.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\arm\arm_map_regs.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\arm\arm_new_nodes.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\arm\arm_nodes_attr.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\arm\arm_optimize.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\arm\arm_transform.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\arm\bearch_arm.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\arm\bearch_arm_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\arm\gen_arm_emitter.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\arm\gen_arm_machine.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\arm\gen_arm_new_nodes.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\arm\gen_arm_regalloc_if.h" />
    <ClCompile Include="$(FirmRoot)\ir\be\mips\bearch_mips.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\mips\gen_mips_emitter.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\mips\gen_mips_machine.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\mips\gen_mips_regalloc_if.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\mips\mips_emitter.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\mips\mips_map_regs.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\mips\mips_new_nodes.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\mips\mips_scheduler.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\mips\mips_transform.c" />
    <ClInclude Include="$(FirmRoot)\ir\be\mips\bearch_mips.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\mips\bearch_mips_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\mips\gen_mips_emitter.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\mips\gen_mips_machine.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\mips\gen_mips_new_nodes.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\mips\gen_mips_regalloc_if.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\mips\mips_emitter.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\mips\mips_map_regs.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\mips\mips_new_nodes.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\mips\mips_nodes_attr.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\mips\mips_scheduler.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\mips\mips_transform.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\mips\mips_util.h" />
    <ClCompile Include="$(FirmRoot)\ir\be\ppc32\bearch_ppc32.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\ppc32\gen_ppc32_emitter.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\ppc32\gen_ppc32_machine.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\ppc32\gen_ppc32_regalloc_if.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\ppc32\ppc32_emitter.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\ppc32\ppc32_map_regs.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\ppc32\ppc32_new_nodes.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\ppc32\ppc32_transform.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\ppc32\ppc32_transform_conv.c" />
    <ClInclude Include="$(FirmRoot)\ir\be\ppc32\bearch_ppc32.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\ppc32\bearch_ppc32_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\ppc32\gen_ppc32_emitter.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\ppc32\gen_ppc32_machine.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\ppc32\gen_ppc32_new_nodes.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\ppc32\gen_ppc32_regalloc_if.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\ppc32\ppc32_emitter.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\ppc32\ppc32_map_regs.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\ppc32\ppc32_new_nodes.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\ppc32\ppc32_nodes_attr.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\ppc32\ppc32_transform_conv.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\ppc32\ppc32_transform.h" />
    <ClCompile Include="$(FirmRoot)\ir\be\amd64\amd64_emitter.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\amd64\amd64_new_nodes.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\amd64\amd64_transform.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\amd64\bearch_amd64.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\amd64\gen_amd64_emitter.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\amd64\gen_amd64_machine.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\amd64\gen_amd64_regalloc_if.c" />
    <ClInclude Include="$(FirmRoot)\ir\be\amd64\amd64_emitter.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\amd64\amd64_new_nodes.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\amd64\amd64_nodes_attr.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\amd64\amd64_transform.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\amd64\bearch_amd64_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\amd64\gen_amd64_emitter.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\amd64\gen_amd64_machine.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\amd64\gen_amd64_new_nodes.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\amd64\gen_amd64_regalloc_if.h" />
    <ClCompile Include="$(FirmRoot)\ir\be\sparc\bearch_sparc.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\sparc\gen_sparc_emitter.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\sparc\gen_sparc_machine.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\sparc\gen_sparc_regalloc_if.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\sparc\sparc_emitter.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\sparc\sparc_map_regs.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\sparc\sparc_new_nodes.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\sparc\sparc_transform.c" />
    <ClInclude Include="$(FirmRoot)\ir\be\sparc\bearch_sparc.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\sparc\bearch_sparc_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\sparc\gen_sparc_emitter.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\sparc\gen_sparc_machine.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\sparc\gen_sparc_new_nodes.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\sparc\gen_sparc_regalloc_if.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\sparc\sparc_emitter.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\sparc\sparc_map_regs.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\sparc\sparc_new_nodes.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\sparc\sparc_nodes_attr.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\sparc\sparc_transform.h" />
    <ClCompile Include="$(FirmRoot)\ir\be\TEMPLATE\bearch_TEMPLATE.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\TEMPLATE\gen_TEMPLATE_emitter.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\TEMPLATE\gen_TEMPLATE_machine.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\TEMPLATE\gen_TEMPLATE_regalloc_if.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\TEMPLATE\TEMPLATE_emitter.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\TEMPLATE\TEMPLATE_new_nodes.c" />
    <ClCompile Include="$(FirmRoot)\ir\be\TEMPLATE\TEMPLATE_transform.c" />
    <ClInclude Include="$(FirmRoot)\ir\be\TEMPLATE\bearch_TEMPLATE_t.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\TEMPLATE\gen_TEMPLATE_emitter.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\TEMPLATE\gen_TEMPLATE_machine.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\TEMPLATE\gen_TEMPLATE_new_nodes.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\TEMPLATE\gen_TEMPLATE_regalloc_if.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\TEMPLATE\TEMPLATE_emitter.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\TEMPLATE\TEMPLATE_new_nodes.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\TEMPLATE\TEMPLATE_nodes_attr.h" />
    <ClInclude Include="$(FirmRoot)\ir\be\TEMPLATE\TEMPLATE_transform.h" />
    <None Include="$(FirmRoot)\scripts\gen_init.py" />
    <None Include="$(FirmRoot)\scripts\gen_ir.py" />
    <None Include="$(FirmRoot)\scripts\spec_util.py" />
    <None Include="$(FirmRoot)\scripts\statev_sql.py" />
    <None Include="$(FirmRoot)\ir\be\scripts\generate_emitter_new.pl" />
    <None Include="$(FirmRoot)\ir\be\scripts\generate_emitter.pl" />
    <None Include="$(FirmRoot)\ir\be\scripts\generate_machine.pl" />
    <None Include="$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl" />
    <None Include="$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl" />
    <None Include="$(FirmRoot)\ir\ir\irflag_t.def" />
    <CustomBuild Include="$(FirmRoot)\ir\be\ia32\ia32_spec.pl">
      <Message Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">Translate Spec: %(FullPath)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl %(FullPath) $(FirmRoot)\ir\be\ia32
				$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl %(FullPath) $(FirmRoot)\ir\be\ia32
				$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl %(FullPath) $(FirmRoot)\ir\be\ia32
				$(FirmRoot)\ir\be\scripts\generate_machine.pl %(FullPath) $(FirmRoot)\ir\be\ia32
</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl;$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl;$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl;$(FirmRoot)\ir\be\scripts\generate_machine.pl;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">$(FirmRoot)\ir\be\ia32\gen_ia32_emitter.c;$(FirmRoot)\ir\be\ia32\gen_ia32_emitter.h;$(FirmRoot)\ir\be\ia32\gen_ia32_new_nodes.c.inl;$(FirmRoot)\ir\be\ia32\gen_ia32_new_nodes.h;$(FirmRoot)\ir\be\ia32\gen_ia32_regalloc_if.c;$(FirmRoot)\ir\be\ia32\gen_ia32_regalloc_if.h;$(FirmRoot)\ir\be\ia32\gen_ia32_machine.c;$(FirmRoot)\ir\be\ia32\gen_ia32_machine.h;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Translate Spec: %(FullPath)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl %(FullPath) $(FirmRoot)\ir\be\ia32
				$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl %(FullPath) $(FirmRoot)\ir\be\ia32
				$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl %(FullPath) $(FirmRoot)\ir\be\ia32
				$(FirmRoot)\ir\be\scripts\generate_machine.pl %(FullPath) $(FirmRoot)\ir\be\ia32
</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl;$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl;$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl;$(FirmRoot)\ir\be\scripts\generate_machine.pl;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(FirmRoot)\ir\be\ia32\gen_ia32_emitter.c;$(FirmRoot)\ir\be\ia32\gen_ia32_emitter.h;$(FirmRoot)\ir\be\ia32\gen_ia32_new_nodes.c.inl;$(FirmRoot)\ir\be\ia32\gen_ia32_new_nodes.h;$(FirmRoot)\ir\be\ia32\gen_ia32_regalloc_if.c;$(FirmRoot)\ir\be\ia32\gen_ia32_regalloc_if.h;$(FirmRoot)\ir\be\ia32\gen_ia32_machine.c;$(FirmRoot)\ir\be\ia32\gen_ia32_machine.h;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Translate Spec: %(FullPath)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl %(FullPath) $(FirmRoot)\ir\be\ia32
				$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl %(FullPath) $(FirmRoot)\ir\be\ia32
				$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl %(FullPath) $(FirmRoot)\ir\be\ia32
				$(FirmRoot)\ir\be\scripts\generate_machine.pl %(FullPath) $(FirmRoot)\ir\be\ia32
</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl;$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl;$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl;$(FirmRoot)\ir\be\scripts\generate_machine.pl;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(FirmRoot)\ir\be\ia32\gen_ia32_emitter.c;$(FirmRoot)\ir\be\ia32\gen_ia32_emitter.h;$(FirmRoot)\ir\be\ia32\gen_ia32_new_nodes.c.inl;$(FirmRoot)\ir\be\ia32\gen_ia32_new_nodes.h;$(FirmRoot)\ir\be\ia32\gen_ia32_regalloc_if.c;$(FirmRoot)\ir\be\ia32\gen_ia32_regalloc_if.h;$(FirmRoot)\ir\be\ia32\gen_ia32_machine.c;$(FirmRoot)\ir\be\ia32\gen_ia32_machine.h;%(Outputs)</Outputs>
    </CustomBuild>
    <CustomBuild Include="$(FirmRoot)\ir\be\arm\arm_spec.pl">
      <Message Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">Translate Spec: %(FullPath)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl %(FullPath) $(FirmRoot)\ir\be\arm
				$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl %(FullPath) $(FirmRoot)\ir\be\arm
				$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl %(FullPath) $(FirmRoot)\ir\be\arm
				$(FirmRoot)\ir\be\scripts\generate_machine.pl %(FullPath) $(FirmRoot)\ir\be\arm
</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl;$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl;$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl;$(FirmRoot)\ir\be\scripts\generate_machine.pl;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">$(FirmRoot)\ir\be\arm\gen_arm_emitter.c;$(FirmRoot)\ir\be\arm\gen_arm_emitter.h;$(FirmRoot)\ir\be\arm\gen_arm_new_nodes.c.inl;$(FirmRoot)\ir\be\arm\gen_arm_new_nodes.h;$(FirmRoot)\ir\be\arm\gen_arm_regalloc_if.c;$(FirmRoot)\ir\be\arm\gen_arm_regalloc_if.h;$(FirmRoot)\ir\be\arm\gen_arm_machine.c;$(FirmRoot)\ir\be\arm\gen_arm_machine.h;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Translate Spec: %(FullPath)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl %(FullPath) $(FirmRoot)\ir\be\arm
				$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl %(FullPath) $(FirmRoot)\ir\be\arm
				$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl %(FullPath) $(FirmRoot)\ir\be\arm
				$(FirmRoot)\ir\be\scripts\generate_machine.pl %(FullPath) $(FirmRoot)\ir\be\arm
</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl;$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl;$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl;$(FirmRoot)\ir\be\scripts\generate_machine.pl;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(FirmRoot)\ir\be\arm\gen_arm_emitter.c;$(FirmRoot)\ir\be\arm\gen_arm_emitter.h;$(FirmRoot)\ir\be\arm\gen_arm_new_nodes.c.inl;$(FirmRoot)\ir\be\arm\gen_arm_new_nodes.h;$(FirmRoot)\ir\be\arm\gen_arm_regalloc_if.c;$(FirmRoot)\ir\be\arm\gen_arm_regalloc_if.h;$(FirmRoot)\ir\be\arm\gen_arm_machine.c;$(FirmRoot)\ir\be\arm\gen_arm_machine.h;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Translate Spec: %(FullPath)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl %(FullPath) $(FirmRoot)\ir\be\arm
				$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl %(FullPath) $(FirmRoot)\ir\be\arm
				$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl %(FullPath) $(FirmRoot)\ir\be\arm
				$(FirmRoot)\ir\be\scripts\generate_machine.pl %(FullPath) $(FirmRoot)\ir\be\arm
</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl;$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl;$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl;$(FirmRoot)\ir\be\scripts\generate_machine.pl;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(FirmRoot)\ir\be\arm\gen_arm_emitter.c;$(FirmRoot)\ir\be\arm\gen_arm_emitter.h;$(FirmRoot)\ir\be\arm\gen_arm_new_nodes.c.inl;$(FirmRoot)\ir\be\arm\gen_arm_new_nodes.h;$(FirmRoot)\ir\be\arm\gen_arm_regalloc_if.c;$(FirmRoot)\ir\be\arm\gen_arm_regalloc_if.h;$(FirmRoot)\ir\be\arm\gen_arm_machine.c;$(FirmRoot)\ir\be\arm\gen_arm_machine.h;%(Outputs)</Outputs>
    </CustomBuild>
    <CustomBuild Include="$(FirmRoot)\ir\be\ppc32\ppc32_spec.pl">
      <Message Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">Translate Spec: %(FullPath)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl %(FullPath) $(FirmRoot)\ir\be\ppc32
				$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl %(FullPath) $(FirmRoot)\ir\be\ppc32
				$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl %(FullPath) $(FirmRoot)\ir\be\ppc32
				$(FirmRoot)\ir\be\scripts\generate_machine.pl %(FullPath) $(FirmRoot)\ir\be\ppc32
</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl;$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl;$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl;$(FirmRoot)\ir\be\scripts\generate_machine.pl;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">$(FirmRoot)\ir\be\ppc32\gen_ppc32_emitter.c;$(FirmRoot)\ir\be\ppc32\gen_ppc32_emitter.h;$(FirmRoot)\ir\be\ppc32\gen_ppc32_new_nodes.c.inl;$(FirmRoot)\ir\be\ppc32\gen_ppc32_new_nodes.h;$(FirmRoot)\ir\be\ppc32\gen_ppc32_regalloc_if.c;$(FirmRoot)\ir\be\ppc32\gen_ppc32_regalloc_if.h;$(FirmRoot)\ir\be\ppc32\gen_ppc32_machine.c;$(FirmRoot)\ir\be\ppc32\gen_ppc32_machine.h;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Translate Spec: %(FullPath)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl %(FullPath) $(FirmRoot)\ir\be\ppc32
				$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl %(FullPath) $(FirmRoot)\ir\be\ppc32
				$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl %(FullPath) $(FirmRoot)\ir\be\ppc32
				$(FirmRoot)\ir\be\scripts\generate_machine.pl %(FullPath) $(FirmRoot)\ir\be\ppc32
</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl;$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl;$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl;$(FirmRoot)\ir\be\scripts\generate_machine.pl;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(FirmRoot)\ir\be\ppc32\gen_ppc32_emitter.c;$(FirmRoot)\ir\be\ppc32\gen_ppc32_emitter.h;$(FirmRoot)\ir\be\ppc32\gen_ppc32_new_nodes.c.inl;$(FirmRoot)\ir\be\ppc32\gen_ppc32_new_nodes.h;$(FirmRoot)\ir\be\ppc32\gen_ppc32_regalloc_if.c;$(FirmRoot)\ir\be\ppc32\gen_ppc32_regalloc_if.h;$(FirmRoot)\ir\be\ppc32\gen_ppc32_machine.c;$(FirmRoot)\ir\be\ppc32\gen_ppc32_machine.h;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Translate Spec: %(FullPath)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl %(FullPath) $(FirmRoot)\ir\be\ppc32
				$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl %(FullPath) $(FirmRoot)\ir\be\ppc32
				$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl %(FullPath) $(FirmRoot)\ir\be\ppc32
				$(FirmRoot)\ir\be\scripts\generate_machine.pl %(FullPath) $(FirmRoot)\ir\be\ppc32
</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl;$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl;$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl;$(FirmRoot)\ir\be\scripts\generate_machine.pl;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(FirmRoot)\ir\be\ppc32\gen_ppc32_emitter.c;$(FirmRoot)\ir\be\ppc32\gen_ppc32_emitter.h;$(FirmRoot)\ir\be\ppc32\gen_ppc32_new_nodes.c.inl;$(FirmRoot)\ir\be\ppc32\gen_ppc32_new_nodes.h;$(FirmRoot)\ir\be\ppc32\gen_ppc32_regalloc_if.c;$(FirmRoot)\ir\be\ppc32\gen_ppc32_regalloc_if.h;$(FirmRoot)\ir\be\ppc32\gen_ppc32_machine.c;$(FirmRoot)\ir\be\ppc32\gen_ppc32_machine.h;%(Outputs)</Outputs>
    </CustomBuild>
    <CustomBuild Include="$(FirmRoot)\ir\be\mips\mips_spec.pl">
      <Message Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">Translate Spec: %(FullPath)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl %(FullPath) $(FirmRoot)\ir\be\mips
				$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl %(FullPath) $(FirmRoot)\ir\be\mips
				$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl %(FullPath) $(FirmRoot)\ir\be\mips
				$(FirmRoot)\ir\be\scripts\generate_machine.pl %(FullPath) $(FirmRoot)\ir\be\mips
</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl;$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl;$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl;$(FirmRoot)\ir\be\scripts\generate_machine.pl;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">$(FirmRoot)\ir\be\mips\gen_mips_emitter.c;$(FirmRoot)\ir\be\mips\gen_mips_emitter.h;$(FirmRoot)\ir\be\mips\gen_mips_new_nodes.c.inl;$(FirmRoot)\ir\be\mips\gen_mips_new_nodes.h;$(FirmRoot)\ir\be\mips\gen_mips_regalloc_if.c;$(FirmRoot)\ir\be\mips\gen_mips_regalloc_if.h;$(FirmRoot)\ir\be\mips\gen_mips_machine.c;$(FirmRoot)\ir\be\mips\gen_mips_machine.h;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Translate Spec: %(FullPath)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl %(FullPath) $(FirmRoot)\ir\be\mips
				$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl %(FullPath) $(FirmRoot)\ir\be\mips
				$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl %(FullPath) $(FirmRoot)\ir\be\mips
				$(FirmRoot)\ir\be\scripts\generate_machine.pl %(FullPath) $(FirmRoot)\ir\be\mips
</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl;$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl;$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl;$(FirmRoot)\ir\be\scripts\generate_machine.pl;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(FirmRoot)\ir\be\mips\gen_mips_emitter.c;$(FirmRoot)\ir\be\mips\gen_mips_emitter.h;$(FirmRoot)\ir\be\mips\gen_mips_new_nodes.c.inl;$(FirmRoot)\ir\be\mips\gen_mips_new_nodes.h;$(FirmRoot)\ir\be\mips\gen_mips_regalloc_if.c;$(FirmRoot)\ir\be\mips\gen_mips_regalloc_if.h;$(FirmRoot)\ir\be\mips\gen_mips_machine.c;$(FirmRoot)\ir\be\mips\gen_mips_machine.h;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Translate Spec: %(FullPath)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl %(FullPath) $(FirmRoot)\ir\be\mips
				$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl %(FullPath) $(FirmRoot)\ir\be\mips
				$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl %(FullPath) $(FirmRoot)\ir\be\mips
				$(FirmRoot)\ir\be\scripts\generate_machine.pl %(FullPath) $(FirmRoot)\ir\be\mips
</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl;$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl;$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl;$(FirmRoot)\ir\be\scripts\generate_machine.pl;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(FirmRoot)\ir\be\mips\gen_mips_emitter.c;$(FirmRoot)\ir\be\mips\gen_mips_emitter.h;$(FirmRoot)\ir\be\mips\gen_mips_new_nodes.c.inl;$(FirmRoot)\ir\be\mips\gen_mips_new_nodes.h;$(FirmRoot)\ir\be\mips\gen_mips_regalloc_if.c;$(FirmRoot)\ir\be\mips\gen_mips_regalloc_if.h;$(FirmRoot)\ir\be\mips\gen_mips_machine.c;$(FirmRoot)\ir\be\mips\gen_mips_machine.h;%(Outputs)</Outputs>
    </CustomBuild>
    <CustomBuild Include="$(FirmRoot)\ir\be\TEMPLATE\TEMPLATE_spec.pl">
      <Message Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">Translate Spec: %(FullPath)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl %(FullPath) $(FirmRoot)\ir\be\TEMPLATE
				$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl %(FullPath) $(FirmRoot)\ir\be\TEMPLATE
				$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl %(FullPath) $(FirmRoot)\ir\be\TEMPLATE
				$(FirmRoot)\ir\be\scripts\generate_machine.pl %(FullPath) $(FirmRoot)\ir\be\TEMPLATE
</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl;$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl;$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl;$(FirmRoot)\ir\be\scripts\generate_machine.pl;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">$(FirmRoot)\ir\be\TEMPLATE\gen_TEMPLATE_emitter.c;$(FirmRoot)\ir\be\TEMPLATE\gen_TEMPLATE_emitter.h;$(FirmRoot)\ir\be\TEMPLATE\gen_TEMPLATE_new_nodes.c.inl;$(FirmRoot)\ir\be\TEMPLATE\gen_TEMPLATE_new_nodes.h;$(FirmRoot)\ir\be\TEMPLATE\gen_TEMPLATE_regalloc_if.c;$(FirmRoot)\ir\be\TEMPLATE\gen_TEMPLATE_regalloc_if.h;$(FirmRoot)\ir\be\TEMPLATE\gen_TEMPLATE_machine.c;$(FirmRoot)\ir\be\TEMPLATE\gen_TEMPLATE_machine.h;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Translate Spec: %(FullPath)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl %(FullPath) $(FirmRoot)\ir\be\TEMPLATE
				$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl %(FullPath) $(FirmRoot)\ir\be\TEMPLATE
				$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl %(FullPath) $(FirmRoot)\ir\be\TEMPLATE
				$(FirmRoot)\ir\be\scripts\generate_machine.pl %(FullPath) $(FirmRoot)\ir\be\TEMPLATE
</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl;$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl;$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl;$(FirmRoot)\ir\be\scripts\generate_machine.pl;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(FirmRoot)\ir\be\TEMPLATE\gen_TEMPLATE_emitter.c;$(FirmRoot)\ir\be\TEMPLATE\gen_TEMPLATE_emitter.h;$(FirmRoot)\ir\be\TEMPLATE\gen_TEMPLATE_new_nodes.c.inl;$(FirmRoot)\ir\be\TEMPLATE\gen_TEMPLATE_new_nodes.h;$(FirmRoot)\ir\be\TEMPLATE\gen_TEMPLATE_regalloc_if.c;$(FirmRoot)\ir\be\TEMPLATE\gen_TEMPLATE_regalloc_if.h;$(FirmRoot)\ir\be\TEMPLATE\gen_TEMPLATE_machine.c;$(FirmRoot)\ir\be\TEMPLATE\gen_TEMPLATE_machine.h;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Translate Spec: %(FullPath)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl %(FullPath) $(FirmRoot)\ir\be\TEMPLATE
				$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl %(FullPath) $(FirmRoot)\ir\be\TEMPLATE
				$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl %(FullPath) $(FirmRoot)\ir\be\TEMPLATE
				$(FirmRoot)\ir\be\scripts\generate_machine.pl %(FullPath) $(FirmRoot)\ir\be\TEMPLATE
</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl;$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl;$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl;$(FirmRoot)\ir\be\scripts\generate_machine.pl;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(FirmRoot)\ir\be\TEMPLATE\gen_TEMPLATE_emitter.c;$(FirmRoot)\ir\be\TEMPLATE\gen_TEMPLATE_emitter.h;$(FirmRoot)\ir\be\TEMPLATE\gen_TEMPLATE_new_nodes.c.inl;$(FirmRoot)\ir\be\TEMPLATE\gen_TEMPLATE_new_nodes.h;$(FirmRoot)\ir\be\TEMPLATE\gen_TEMPLATE_regalloc_if.c;$(FirmRoot)\ir\be\TEMPLATE\gen_TEMPLATE_regalloc_if.h;$(FirmRoot)\ir\be\TEMPLATE\gen_TEMPLATE_machine.c;$(FirmRoot)\ir\be\TEMPLATE\gen_TEMPLATE_machine.h;%(Outputs)</Outputs>
		</CustomBuild>
    <CustomBuild Include="$(FirmRoot)\ir\be\sparc\sparc_spec.pl">
      <Message Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">Translate Spec: %(FullPath)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl %(FullPath) $(FirmRoot)\ir\be\sparc
				$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl %(FullPath) $(FirmRoot)\ir\be\sparc
				$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl %(FullPath) $(FirmRoot)\ir\be\sparc
				$(FirmRoot)\ir\be\scripts\generate_machine.pl %(FullPath) $(FirmRoot)\ir\be\sparc
</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl;$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl;$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl;$(FirmRoot)\ir\be\scripts\generate_machine.pl;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">$(FirmRoot)\ir\be\sparc\gen_sparc_emitter.c;$(FirmRoot)\ir\be\sparc\gen_sparc_emitter.h;$(FirmRoot)\ir\be\sparc\gen_sparc_new_nodes.c.inl;$(FirmRoot)\ir\be\sparc\gen_sparc_new_nodes.h;$(FirmRoot)\ir\be\sparc\gen_sparc_regalloc_if.c;$(FirmRoot)\ir\be\sparc\gen_sparc_regalloc_if.h;$(FirmRoot)\ir\be\sparc\gen_sparc_machine.c;$(FirmRoot)\ir\be\sparc\gen_sparc_machine.h;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Translate Spec: %(FullPath)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl %(FullPath) $(FirmRoot)\ir\be\sparc
				$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl %(FullPath) $(FirmRoot)\ir\be\sparc
				$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl %(FullPath) $(FirmRoot)\ir\be\sparc
				$(FirmRoot)\ir\be\scripts\generate_machine.pl %(FullPath) $(FirmRoot)\ir\be\sparc
</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl;$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl;$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl;$(FirmRoot)\ir\be\scripts\generate_machine.pl;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(FirmRoot)\ir\be\sparc\gen_sparc_emitter.c;$(FirmRoot)\ir\be\sparc\gen_sparc_emitter.h;$(FirmRoot)\ir\be\sparc\gen_sparc_new_nodes.c.inl;$(FirmRoot)\ir\be\sparc\gen_sparc_new_nodes.h;$(FirmRoot)\ir\be\sparc\gen_sparc_regalloc_if.c;$(FirmRoot)\ir\be\sparc\gen_sparc_regalloc_if.h;$(FirmRoot)\ir\be\sparc\gen_sparc_machine.c;$(FirmRoot)\ir\be\sparc\gen_sparc_machine.h;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Translate Spec: %(FullPath)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl %(FullPath) $(FirmRoot)\ir\be\sparc
				$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl %(FullPath) $(FirmRoot)\ir\be\sparc
				$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl %(FullPath) $(FirmRoot)\ir\be\sparc
				$(FirmRoot)\ir\be\scripts\generate_machine.pl %(FullPath) $(FirmRoot)\ir\be\sparc
</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl;$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl;$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl;$(FirmRoot)\ir\be\scripts\generate_machine.pl;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(FirmRoot)\ir\be\sparc\gen_sparc_emitter.c;$(FirmRoot)\ir\be\sparc\gen_sparc_emitter.h;$(FirmRoot)\ir\be\sparc\gen_sparc_new_nodes.c.inl;$(FirmRoot)\ir\be\sparc\gen_sparc_new_nodes.h;$(FirmRoot)\ir\be\sparc\gen_sparc_regalloc_if.c;$(FirmRoot)\ir\be\sparc\gen_sparc_regalloc_if.h;$(FirmRoot)\ir\be\sparc\gen_sparc_machine.c;$(FirmRoot)\ir\be\sparc\gen_sparc_machine.h;%(Outputs)</Outputs>
		</CustomBuild>
    <CustomBuild Include="$(FirmRoot)\ir\be\amd64\amd64_spec.pl">
      <Message Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">Translate Spec: %(FullPath)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl %(FullPath) $(FirmRoot)\ir\be\amd64
				$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl %(FullPath) $(FirmRoot)\ir\be\amd64
				$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl %(FullPath) $(FirmRoot)\ir\be\amd64
				$(FirmRoot)\ir\be\scripts\generate_machine.pl %(FullPath) $(FirmRoot)\ir\be\amd64
</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl;$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl;$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl;$(FirmRoot)\ir\be\scripts\generate_machine.pl;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">$(FirmRoot)\ir\be\amd64\gen_amd64_emitter.c;$(FirmRoot)\ir\be\amd64\gen_amd64_emitter.h;$(FirmRoot)\ir\be\amd64\gen_amd64_new_nodes.c.inl;$(FirmRoot)\ir\be\amd64\gen_amd64_new_nodes.h;$(FirmRoot)\ir\be\amd64\gen_amd64_regalloc_if.c;$(FirmRoot)\ir\be\amd64\gen_amd64_regalloc_if.h;$(FirmRoot)\ir\be\amd64\gen_amd64_machine.c;$(FirmRoot)\ir\be\amd64\gen_amd64_machine.h;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Translate Spec: %(FullPath)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl %(FullPath) $(FirmRoot)\ir\be\amd64
				$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl %(FullPath) $(FirmRoot)\ir\be\amd64
				$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl %(FullPath) $(FirmRoot)\ir\be\amd64
				$(FirmRoot)\ir\be\scripts\generate_machine.pl %(FullPath) $(FirmRoot)\ir\be\amd64
</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl;$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl;$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl;$(FirmRoot)\ir\be\scripts\generate_machine.pl;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(FirmRoot)\ir\be\amd64\gen_amd64_emitter.c;$(FirmRoot)\ir\be\amd64\gen_amd64_emitter.h;$(FirmRoot)\ir\be\amd64\gen_amd64_new_nodes.c.inl;$(FirmRoot)\ir\be\amd64\gen_amd64_new_nodes.h;$(FirmRoot)\ir\be\amd64\gen_amd64_regalloc_if.c;$(FirmRoot)\ir\be\amd64\gen_amd64_regalloc_if.h;$(FirmRoot)\ir\be\amd64\gen_amd64_machine.c;$(FirmRoot)\ir\be\amd64\gen_amd64_machine.h;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Translate Spec: %(FullPath)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl %(FullPath) $(FirmRoot)\ir\be\amd64
				$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl %(FullPath) $(FirmRoot)\ir\be\amd64
				$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl %(FullPath) $(FirmRoot)\ir\be\amd64
				$(FirmRoot)\ir\be\scripts\generate_machine.pl %(FullPath) $(FirmRoot)\ir\be\amd64
</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(FirmRoot)\ir\be\scripts\generate_emitter.pl;$(FirmRoot)\ir\be\scripts\generate_new_opcodes.pl;$(FirmRoot)\ir\be\scripts\generate_regalloc_if.pl;$(FirmRoot)\ir\be\scripts\generate_machine.pl;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(FirmRoot)\ir\be\amd64\gen_amd64_emitter.c;$(FirmRoot)\ir\be\amd64\gen_amd64_emitter.h;$(FirmRoot)\ir\be\amd64\gen_amd64_new_nodes.c.inl;$(FirmRoot)\ir\be\amd64\gen_amd64_new_nodes.h;$(FirmRoot)\ir\be\amd64\gen_amd64_regalloc_if.c;$(FirmRoot)\ir\be\amd64\gen_amd64_regalloc_if.h;$(FirmRoot)\ir\be\amd64\gen_amd64_machine.c;$(FirmRoot)\ir\be\amd64\gen_amd64_machine.h;%(Outputs)</Outputs>
    </CustomBuild>

    <CustomBuild Include="$(FirmRoot)\scripts\gen_ir_io.py">
      <Message Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">Generating I/O code: %(FullPath)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">python %(FullPath) ..\scrip..\..\ir_spec.py ..\..\ir\ir</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">..\scrip..\..\ir_spec.py;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">..\..\ir\ir\gen_irio_import.inl;..\..\ir\ir\gen_irio_export.inl;..\..\ir\ir\gen_irio_lex.inl;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating I/O code: %(FullPath)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">python %(FullPath) ..\scrip..\..\ir_spec.py ..\..\ir\ir</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">..\scrip..\..\ir_spec.py;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">..\..\ir\ir\gen_irio_import.inl;..\..\ir\ir\gen_irio_export.inl;..\..\ir\ir\gen_irio_lex.inl;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating I/O code: %(FullPath)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">python %(FullPath) ..\scrip..\..\ir_spec.py ..\..\ir\ir</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">..\scrip..\..\ir_spec.py;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">..\..\ir\ir\gen_irio_import.inl;..\..\ir\ir\gen_irio_export.inl;..\..\ir\ir\gen_irio_lex.inl;%(Outputs)</Outputs>
    </CustomBuild>
    <CustomBuild Include="$(FirmRoot)\scripts\ir_spec.py">
      <Message Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">Translate IR-Spec: %(FullPath)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">python ..\..\scripts\gen_ir.py %(FullPath) ..\..\ir\ir</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">..\..\scripts\gen_ir.py;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='DebugJTEST|Win32'">..\..\ir\ir\gen_ir_cons.c.inl;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Translate IR-Spec: %(FullPath)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">python ..\..\scripts\gen_ir.py %(FullPath) ..\..\ir\ir</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">..\..\scripts\gen_ir.py;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(FirmRoot)\ir\ir\gen_ir_cons.c.inl;$(FirmRoot)\ir\ir\gen_irnode.h;$(FirmRoot)\ir\ir\gen_irnode.c.inl;$(FirmRoot)\ir\ir\gen_irop.c.inl;%(Outputs)</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Translate IR-Spec: %(FullPath)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">python ..\..\scripts\gen_ir.py %(FullPath) ..\..\ir\ir</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">..\..\scripts\gen_ir.py;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">..\..\ir\ir\gen_ir_cons.c.inl;%(Outputs)</Outputs>
    </CustomBuild>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>
